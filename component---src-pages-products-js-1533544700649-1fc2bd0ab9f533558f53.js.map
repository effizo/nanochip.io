{"version":3,"sources":["webpack:///component---src-pages-products-js-1533544700649-1fc2bd0ab9f533558f53.js","webpack:///./src/pages/products.js"],"names":["webpackJsonp","181","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","pageQuery","undefined","_extends","assign","target","i","arguments","length","source","_react","React","_gatsbyImage","_gatsbyImage2","_react2","_utils","Header","_ref","i18n","createElement","className","Title","title","_","style","fontFamily","Trans","id","IndexPage","props","data","data-aos","esp8266","alt","esp32","components","arduino","ironsolder","withI18n"],"mappings":"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","file":"component---src-pages-products-js-1533544700649-1fc2bd0ab9f533558f53.js","sourcesContent":["webpackJsonp([233015634327247],{\n\n/***/ 181:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar React = _interopRequireWildcard(_react);\n\t\n\tvar _gatsbyImage = __webpack_require__(35);\n\t\n\tvar _gatsbyImage2 = _interopRequireDefault(_gatsbyImage);\n\t\n\tvar _react2 = __webpack_require__(8);\n\t\n\tvar _utils = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar Header = function Header(_ref) {\n\t  var i18n = _ref.i18n;\n\t  return React.createElement(\n\t    \"header\",\n\t    { className: \"header text-white bg-ledgy\" },\n\t    React.createElement(_utils.Title, { title: i18n._(\"About us\") }),\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"container text-center\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"row\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"col-12 col-lg-8 offset-lg-2\" },\n\t          React.createElement(\n\t            \"h1\",\n\t            { style: { fontFamily: \"Roboto\" } },\n\t            React.createElement(_react2.Trans, {\n\t              id: \"Products are made by IoT Maker Vietnam\"\n\t            })\n\t          )\n\t        )\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar Founder = function Founder(_ref2) {\n\t  var name = _ref2.name,\n\t      func = _ref2.func,\n\t      description = _ref2.description,\n\t      img = _ref2.img,\n\t      twitterlink = _ref2.twitterlink,\n\t      fade = _ref2.fade,\n\t      linkedinlink = _ref2.linkedinlink,\n\t      mail = _ref2.mail;\n\t  return React.createElement(\n\t    \"div\",\n\t    { className: \"col-12 col-md-6 col-lg-4 team-1\" },\n\t    img && React.createElement(\n\t      \"div\",\n\t      { \"data-aos\": \"fade-\" + fade },\n\t      React.createElement(_gatsbyImage2.default, _extends({}, img, { alt: name }))\n\t    ),\n\t    React.createElement(\n\t      \"h6\",\n\t      null,\n\t      name\n\t    ),\n\t    React.createElement(\n\t      \"small\",\n\t      null,\n\t      func\n\t    ),\n\t    React.createElement(\n\t      \"p\",\n\t      null,\n\t      description\n\t    ),\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"social social-boxed social-rounded social-gray\" },\n\t      React.createElement(\n\t        \"a\",\n\t        { className: \"social-mail\", href: \"mailto:\" + mail },\n\t        React.createElement(\"i\", { className: \"fa fa-envelope\" })\n\t      ),\n\t      React.createElement(\n\t        \"a\",\n\t        { className: \"social-twitter\", href: twitterlink },\n\t        React.createElement(\"i\", { className: \"fa fa-twitter\" })\n\t      ),\n\t      React.createElement(\n\t        \"a\",\n\t        { className: \"social-linkedin\", href: linkedinlink },\n\t        React.createElement(\"i\", { className: \"fa fa-linkedin\" })\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar Investor = function Investor(_ref3) {\n\t  var name = _ref3.name,\n\t      func = _ref3.func,\n\t      description = _ref3.description,\n\t      img = _ref3.img,\n\t      fade = _ref3.fade;\n\t  return React.createElement(\n\t    \"div\",\n\t    { className: \"col-12 col-md-4 team-2\" },\n\t    img && React.createElement(\n\t      \"div\",\n\t      { \"data-aos\": \"fade-\" + fade },\n\t      React.createElement(_gatsbyImage2.default, _extends({}, img, { alt: name }))\n\t    ),\n\t    React.createElement(\n\t      \"h5\",\n\t      null,\n\t      name\n\t    ),\n\t    React.createElement(\n\t      \"small\",\n\t      null,\n\t      func\n\t    ),\n\t    React.createElement(\n\t      \"p\",\n\t      null,\n\t      description\n\t    )\n\t  );\n\t};\n\t\n\tvar Advisor = function Advisor(_ref4) {\n\t  var name = _ref4.name,\n\t      func = _ref4.func,\n\t      description = _ref4.description,\n\t      img = _ref4.img,\n\t      fade = _ref4.fade;\n\t  return React.createElement(\n\t    \"div\",\n\t    { className: \"col-12 col-md-6 team-2\" },\n\t    img && React.createElement(\n\t      \"div\",\n\t      { \"data-aos\": \"fade-\" + fade },\n\t      React.createElement(_gatsbyImage2.default, _extends({}, img, { alt: name }))\n\t    ),\n\t    React.createElement(\n\t      \"h5\",\n\t      null,\n\t      name\n\t    ),\n\t    React.createElement(\n\t      \"small\",\n\t      null,\n\t      func\n\t    ),\n\t    React.createElement(\n\t      \"p\",\n\t      null,\n\t      description\n\t    )\n\t  );\n\t};\n\t\n\tvar IndexPage = function IndexPage(props) {\n\t  var data = props.data,\n\t      i18n = props.i18n;\n\t\n\t  return React.createElement(\n\t    \"div\",\n\t    null,\n\t    React.createElement(Header, props),\n\t    React.createElement(\n\t      \"main\",\n\t      { className: \"main-content\" },\n\t      React.createElement(\n\t        \"section\",\n\t        { className: \"section py-150 bg-gray font-family-roboto\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"container\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"row\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-12 col-lg-6 pl-50 pr-80\" },\n\t              React.createElement(\n\t                \"h2\",\n\t                { style: { fontFamily: \"Roboto\" } },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"ESP8266 WiFi Uno\"\n\t                })\n\t              ),\n\t              React.createElement(\n\t                \"p\",\n\t                { className: \"text-justify font-family-arial\" },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"This is the first circuit board designed in our Open Source project. board using the ESP8266 microprocessor developed by Espressif. ESP8266 WiFi Uno is designed according to the size of the Arduino Uno, so it is compatible with most Arduino Uno expansion circuits. In addition to the basic features of the Arudino Uno, the ESP8266 WiFi Uno can also connect to WiFi. Because of its outstanding features, this is a circuit board suitable for studying and researching to make IoT (Internet of Things) devices - data collection and control devices over WiFi. Currently the ESP8266 WiFi Uno can be programmed using the Arduino IDE, MicroPython, NodeMCU - Lua.\"\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              {\n\t                className: \"col-12 col-lg-6 p-50 align-self-center\",\n\t                \"data-aos\": \"fade-left\"\n\t              },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, data.esp8266, {\n\t                className: \"shadow-3\",\n\t                alt: i18n._(\"ESP8266 WiFi Uno\")\n\t              }))\n\t            )\n\t          )\n\t        )\n\t      ),\n\t      React.createElement(\n\t        \"section\",\n\t        { className: \"section\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"container\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"row\" },\n\t            React.createElement(\n\t              \"div\",\n\t              {\n\t                className: \"col-12 col-lg-6 p-50 align-self-center\",\n\t                \"data-aos\": \"fade-right\"\n\t              },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, data.esp32, {\n\t                className: \"shadow-3\",\n\t                alt: i18n._(\"ESP32 IoT Uno\")\n\t              }))\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-12 col-lg-6 pl-50 pr-80\" },\n\t              React.createElement(\n\t                \"h2\",\n\t                { style: { fontFamily: \"Roboto\" } },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"ESP32 IoT Uno\"\n\t                })\n\t              ),\n\t              React.createElement(\n\t                \"p\",\n\t                { className: \"text-justify font-family-arial\" },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"This is the main circuit board in the Open Source project series. Using the ESP32 processor, is an upgraded version of the ESP8266. In addition to the ESP8266 WiFi Uno features, the ESP32 IoT Uno also features outstanding features such as Bluetooth wireless interface 4.2, audio programming, support for wired connections: <0>Serial, CAN, Ethernet, I2C , SPI, IRDA, TOUCH ... </0>ESP32 IoT Uno can now be programmed on many tools such as Arduino IDE, ESP-IDF, ESP-ADF, MicroPython, NodeMCU - LUA, \\u2026\",\n\t                  components: [React.createElement(\"i\", null)]\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      ),\n\t      React.createElement(\n\t        \"section\",\n\t        { className: \"section py-150 bg-gray\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"container\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"row\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-12 col-lg-6 pl-50 pr-80\" },\n\t              React.createElement(\n\t                \"h2\",\n\t                { style: { fontFamily: \"Roboto\" } },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"IoT Maker UnoX\"\n\t                })\n\t              ),\n\t              React.createElement(\n\t                \"p\",\n\t                { className: \"text-justify font-family-arial\" },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"An other circuit board developed in the Open Source project series. Is an Arduino Uno circuit board developed by IoT Maker Viet Nam, with more improvements. Use ATMega328P microprocessor paste instead of conventional pin plugs. Uses the popular Micro Usb type B port on the market, adding extra pins for the most popular modules such as OLED, Servo, common sensor module (temperature, humidity, light , ...). And of course IoT Maker UnoX can also be programmed on the Arduino IDE software, as a regular Arduino Uno board.\"\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              {\n\t                className: \"col-12 col-lg-6 p-50 align-self-center\",\n\t                \"data-aos\": \"fade-left\"\n\t              },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, data.arduino, {\n\t                className: \"shadow-3\",\n\t                alt: i18n._(\"IoT Maker UnoX\")\n\t              }))\n\t            )\n\t          )\n\t        )\n\t      ),\n\t      React.createElement(\n\t        \"section\",\n\t        { className: \"section\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"container\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"row\" },\n\t            React.createElement(\n\t              \"div\",\n\t              {\n\t                className: \"col-12 col-lg-6 p-50 align-self-center\",\n\t                \"data-aos\": \"fade-right\"\n\t              },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, data.ironsolder, {\n\t                className: \"shadow-3\",\n\t                alt: i18n._(\"Soldering IoT Maker SR01\")\n\t              }))\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-12 col-lg-6 pl-50 pr-80\" },\n\t              React.createElement(\n\t                \"h2\",\n\t                { style: { fontFamily: \"Roboto\" } },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"Soldering IoT Maker SR01\"\n\t                })\n\t              ),\n\t              React.createElement(\n\t                \"p\",\n\t                { className: \"text-justify font-family-arial\" },\n\t                React.createElement(_react2.Trans, {\n\t                  id: \"This is a product designed and manufactured by IoT Maker Vietnam. IoT Maker welding station with small, compact, sturdy aluminum box, comes with high quality Hako 65W welding torch, fast heating. The temperature is controlled by an encoder and displayed on 8 LEDs corresponding to the temperature level. The encoder has the ability to rotate non-stop, so it is easy to adjust. Can be used with low power adapter (24V-2A), the welding torches will be heated slowly, without shock, as the small power adapter off suddenly.\"\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\texports.default = (0, _react2.withI18n)()(IndexPage);\n\t\n\t// eslint-disable-next-line no-undef\n\t\n\tvar pageQuery = exports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-products-js-1533544700649-1fc2bd0ab9f533558f53.js","// @flow\n\nimport * as React from \"react\";\nimport Img from \"gatsby-image\";\nimport { withI18n, Trans } from \"@lingui/react\";\n\nimport { Title } from \"../layouts/utils\";\n\nconst Header = ({ i18n }: Props) => (\n  <header className=\"header text-white bg-ledgy\">\n    <Title title={i18n.t`About us`} />\n\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-12 col-lg-8 offset-lg-2\">\n          <h1 style={{ fontFamily: \"Roboto\" }}>\n            <Trans>Products are made by IoT Maker Vietnam</Trans>\n          </h1>\n        </div>\n      </div>\n    </div>\n  </header>\n);\n\ntype ProfileProps = {\n  name: string,\n  func: string,\n  description: string,\n  img: Object,\n  fade: string\n};\ntype FounderProps = {\n  ...$Exact<ProfileProps>,\n  twitterlink: string,\n  linkedinlink: string,\n  mail: string\n};\n\nconst Founder = ({\n  name,\n  func,\n  description,\n  img,\n  twitterlink,\n  fade,\n  linkedinlink,\n  mail\n}: FounderProps) => (\n  <div className=\"col-12 col-md-6 col-lg-4 team-1\">\n    {img && (\n      <div data-aos={`fade-${fade}`}>\n        <Img {...img} alt={name} />\n      </div>\n    )}\n    <h6>{name}</h6>\n    <small>{func}</small>\n    <p>{description}</p>\n    <div className=\"social social-boxed social-rounded social-gray\">\n      <a className=\"social-mail\" href={`mailto:${mail}`}>\n        <i className=\"fa fa-envelope\" />\n      </a>\n      <a className=\"social-twitter\" href={twitterlink}>\n        <i className=\"fa fa-twitter\" />\n      </a>\n      <a className=\"social-linkedin\" href={linkedinlink}>\n        <i className=\"fa fa-linkedin\" />\n      </a>\n    </div>\n  </div>\n);\n\nconst Investor = ({ name, func, description, img, fade }: ProfileProps) => (\n  <div className=\"col-12 col-md-4 team-2\">\n    {img && (\n      <div data-aos={`fade-${fade}`}>\n        <Img {...img} alt={name} />\n      </div>\n    )}\n    <h5>{name}</h5>\n    <small>{func}</small>\n    <p>{description}</p>\n  </div>\n);\n\nconst Advisor = ({ name, func, description, img, fade }: ProfileProps) => (\n  <div className=\"col-12 col-md-6 team-2\">\n    {img && (\n      <div data-aos={`fade-${fade}`}>\n        <Img {...img} alt={name} />\n      </div>\n    )}\n    <h5>{name}</h5>\n    <small>{func}</small>\n    <p>{description}</p>\n  </div>\n);\n\nconst IndexPage = (props: Props) => {\n  const { data, i18n } = props;\n  return (\n    <div>\n      <Header {...props} />\n      <main className=\"main-content\">\n        <section className=\"section py-150 bg-gray font-family-roboto\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-6 pl-50 pr-80\">\n                <h2 style={{ fontFamily: \"Roboto\" }}>\n                  <Trans>ESP8266 WiFi Uno</Trans>\n                </h2>\n                <p className=\"text-justify font-family-arial\">\n                  <Trans>\n                    This is the first circuit board designed in our Open Source\n                    project. board using the ESP8266 microprocessor developed by\n                    Espressif. ESP8266 WiFi Uno is designed according to the\n                    size of the Arduino Uno, so it is compatible with most\n                    Arduino Uno expansion circuits. In addition to the basic\n                    features of the Arudino Uno, the ESP8266 WiFi Uno can also\n                    connect to WiFi. Because of its outstanding features, this\n                    is a circuit board suitable for studying and researching to\n                    make IoT (Internet of Things) devices - data collection and\n                    control devices over WiFi. Currently the ESP8266 WiFi Uno\n                    can be programmed using the Arduino IDE, MicroPython,\n                    NodeMCU - Lua.\n                  </Trans>\n                </p>\n              </div>\n              <div\n                className=\"col-12 col-lg-6 p-50 align-self-center\"\n                data-aos=\"fade-left\"\n              >\n                <Img\n                  {...data.esp8266}\n                  className=\"shadow-3\"\n                  alt={i18n.t`ESP8266 WiFi Uno`}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div\n                className=\"col-12 col-lg-6 p-50 align-self-center\"\n                data-aos=\"fade-right\"\n              >\n                <Img\n                  {...data.esp32}\n                  className=\"shadow-3\"\n                  alt={i18n.t`ESP32 IoT Uno`}\n                />\n              </div>\n              <div className=\"col-12 col-lg-6 pl-50 pr-80\">\n                <h2 style={{ fontFamily: \"Roboto\" }}>\n                  <Trans>ESP32 IoT Uno</Trans>\n                </h2>\n                <p className=\"text-justify font-family-arial\">\n                  <Trans>\n                    This is the main circuit board in the Open Source project\n                    series. Using the ESP32 processor, is an upgraded version of\n                    the ESP8266. In addition to the ESP8266 WiFi Uno features,\n                    the ESP32 IoT Uno also features outstanding features such as\n                    Bluetooth wireless interface 4.2, audio programming, support\n                    for wired connections: <i>Serial, CAN, Ethernet, I2C , SPI, IRDA, TOUCH ... </i>ESP32 IoT Uno can now be programmed on many tools such as Arduino\n                    IDE, ESP-IDF, ESP-ADF, MicroPython, NodeMCU - LUA, …\n                  </Trans>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"section py-150 bg-gray\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-6 pl-50 pr-80\">\n                <h2 style={{ fontFamily: \"Roboto\" }}>\n                  <Trans>IoT Maker UnoX</Trans>\n                </h2>\n                <p className=\"text-justify font-family-arial\">\n                  <Trans>\n                   An other circuit board developed in the Open Source project series. Is an Arduino Uno circuit board developed by IoT Maker Viet Nam, with more improvements. Use ATMega328P microprocessor paste instead of conventional pin plugs. Uses the popular Micro Usb type B port on the market, adding extra pins for the most popular modules such as OLED, Servo, common sensor module (temperature, humidity, light , ...). And of course IoT Maker UnoX can also be programmed on the Arduino IDE software, as a regular Arduino Uno board.\n                  </Trans>\n                </p>\n              </div>\n              <div\n                className=\"col-12 col-lg-6 p-50 align-self-center\"\n                data-aos=\"fade-left\"\n              >\n                <Img\n                  {...data.arduino}\n                  className=\"shadow-3\"\n                  alt={i18n.t`IoT Maker UnoX`}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div\n                className=\"col-12 col-lg-6 p-50 align-self-center\"\n                data-aos=\"fade-right\"\n              >\n                <Img\n                  {...data.ironsolder}\n                  className=\"shadow-3\"\n                  alt={i18n.t`Soldering IoT Maker SR01`}\n                />\n              </div>\n              <div className=\"col-12 col-lg-6 pl-50 pr-80\">\n                <h2 style={{ fontFamily: \"Roboto\" }}>\n                  <Trans>Soldering IoT Maker SR01</Trans>\n                </h2>\n                <p className=\"text-justify font-family-arial\">\n                  <Trans>\n                  This is a product designed and manufactured by IoT Maker Vietnam. IoT Maker welding station with small, compact, sturdy aluminum box, comes with high quality Hako 65W welding torch, fast heating. The temperature is controlled by an encoder and displayed on 8 LEDs corresponding to the temperature level. The encoder has the ability to rotate non-stop, so it is easy to adjust. Can be used with low power adapter (24V-2A), the welding torches will be heated slowly, without shock, as the small power adapter off suddenly.\n                  </Trans>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default withI18n()(IndexPage);\n\n// eslint-disable-next-line no-undef\nexport const pageQuery = graphql`\n  query ProductsQuery {\n    mission: imageSharp(id: { regex: \"/mission/\" }) {\n      sizes(maxWidth: 600) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n    esp32: imageSharp(id: { regex: \"/esp32/\" }) {\n      sizes(maxWidth: 600) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n    esp8266: imageSharp(id: { regex: \"/esp8266/\" }) {\n      sizes(maxWidth: 600) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n    arduino: imageSharp(id: { regex: \"/arduino/\" }) {\n      sizes(maxWidth: 600) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n    ironsolder: imageSharp(id: { regex: \"/iron-solder/\" }) {\n      sizes(maxWidth: 600) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n    paul: imageSharp(id: { regex: \"/paul.jpg/\" }) {\n      resolutions(width: 128, height: 128) {\n        ...GatsbyImageSharpResolutions\n      }\n    }\n    luzius: imageSharp(id: { regex: \"/luzius.jpg/\" }) {\n      resolutions(width: 128, height: 128) {\n        ...GatsbyImageSharpResolutions\n      }\n    }\n    adrian: imageSharp(id: { regex: \"/adrian.jpg/\" }) {\n      resolutions(width: 128, height: 128) {\n        ...GatsbyImageSharpResolutions\n      }\n    }\n    elena: imageSharp(id: { regex: \"/elena.jpg/\" }) {\n      resolutions(width: 128, height: 128) {\n        ...GatsbyImageSharpResolutions\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/products.js"],"sourceRoot":""}